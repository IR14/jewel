def gems(length, flag_height_workpiece, flag_diameter_stone, flag_code, flag_num, finger_size, height_workpiece,
         diameter_stone, code):
    if not length:
        finger_size = None
        finger_size = input_check(finger_size, 'float', 'x > 0',
                                  'Введите размер кольца:',
                                  'Данные некорректны, повторите ввод.')

    if flag_height_workpiece or not length:
        if not length:
            height_workpiece = None
        height_workpiece = input_check(height_workpiece, 'float', 'x > 0',
                                       'Введите высоту шинки:',
                                       'Данные некорректны, повторите ввод.')

    if flag_diameter_stone or not length:
        if not length:
            diameter_stone = None
        while True:
            try:
                diameter_stone = float((input('Введите диаметр камушка, который находится в промежутке от 0.5 до %f:' 
                                              % (2*(height_workpiece - 0.8)))))
                if (diameter_stone >= 0.5) and (diameter_stone <= 2*(height_workpiece - 0.8)):
                    break
                else:
                    raise ValueError
            except ValueError:
                print('Данные некорректны, повторите ввод.')

    if flag_code or not length:
        print('Выберите область посадки камней.\n',
              'Выберите цифру, которая соответсвует вашему выбору:\n',
              '1. Камни расположены на четверти кольца.\n',
              '2. Камни расположены на половине кольца.\n',
              '3. Камни расположены на 3/4 кольца.\n',
              '4. Камни расположены по всей длине окружности.\n', sep='')
        if not length:
            code = None
        code = input_check(code, 'int', 'x in (1, 2, 3, 4)',
                           'Ввведите цифру:',
                           'Данные некорректны, повторите ввод.')

    if flag_code or flag_height_workpiece or not length:
        length = code / 4 * 3.1416 * (finger_size + height_workpiece)

    max_num = round((length + 0.2) / (
            diameter_stone + 0.2))  # (всегда будет измен. если изм. друг. парм.)максимальное кол-во камней для функции ring()

    if not flag_num:
        ring(finger_size, height_workpiece, diameter_stone, code, max_num)
    else:
        ring(finger_size, height_workpiece, diameter_stone, code, flag_num)

    flag_height_workpiece, flag_diameter_stone, flag_code, flag_num = False, False, False, False

    print('Выберите дальнейшие действия.\n',
          'Вы можете выбрать комбинацию действий, например, чтобы одновременно изменить высоту заготовки и область посадки камней,\
          необходимо ввести «13».\n',
          'Выберите цифру, которая соответсвует вашему выбору:\n',
          '1. Изменить высоту заготовки.\n',
          '2. Изменить диаметр камня.\n',
          '3. Изменить область посадки камней.\n',
          '4. Изменить количество камней.\n',
          '5. Выход.\n', sep='')

    choose = None
    choose = input_check(choose, 'int', 'x in (1, 2, 3, 4, 5, 12, 13, 14, 23, 24, 34, 123, 124, 234, 1234)',
                         'Ввведите цифру:',
                         'Данные некорректны, повторите ввод.')

    if str(choose).find('5') == -1:

        if str(choose).find('1') != -1:
            flag_height_workpiece = True

        if str(choose).find('2') != -1:
            flag_diameter_stone = True

        if str(choose).find('3') != -1:
            flag_code = True

        if str(choose).find('4') != -1:
            if not flag_num:
                flag_num = None
                while True:
                    try:
                        flag_num = int(
                            (input('Введите новое количество камней, которое находится в промежутке от 1 до %d:'
                                   % (max_num - 1))))
                        if (flag_num > 0) and (flag_num < max_num):
                            break
                        else:
                            raise ValueError
                    except ValueError:
                        print('Данные некорректны, повторите ввод.')

        gems(length, flag_height_workpiece, flag_diameter_stone, flag_code, flag_num, finger_size, height_workpiece,
                    diameter_stone, code)
